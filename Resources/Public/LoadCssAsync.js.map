{"version":3,"sources":["LoadCSSAsynchron/loadCSS.js","LoadCSSAsynchron/PreloadPolyfill.js"],"names":["w","loadCSS","href","before","media","ready","cb","doc","body","setTimeout","loadCB","ss","addEventListener","removeEventListener","ref","document","createElement","refs","getElementsByTagName","childNodes","length","sheets","styleSheets","rel","parentNode","insertBefore","nextSibling","onloadcssdefined","resolvedHref","i","window","rp","relpreload","support","relList","supports","e","poly","links","link","getAttribute","run","setInterval","clearInterval","attachEvent"],"mappings":";;;;;0BACC,SAASA,GAuETA,EAAEC,QApEY,SAAUC,EAAMC,EAAQC,GAwBrC,SAASC,EAAOC,GACf,GAAIC,EAAIC,KACP,OAAOF,IAERG,WAAW,WACVJ,EAAOC,KAuBT,SAASI,IACJC,EAAGC,kBACND,EAAGE,oBAAqB,OAAQH,GAEjCC,EAAGP,MAAQA,GAAS,MAlDrB,IAEIU,EAFAP,EAAMP,EAAEe,SACRJ,EAAKJ,EAAIS,cAAe,QAE5B,GAAIb,EACHW,EAAMX,MAEF,CACJ,IAAIc,GAASV,EAAIC,MAAQD,EAAIW,qBAAsB,QAAU,IAAMC,WACnEL,EAAMG,EAAMA,EAAKG,OAAS,GAG3B,IAAIC,EAASd,EAAIe,YACjBX,EAAGY,IAAM,aACTZ,EAAGT,KAAOA,EAEVS,EAAGP,MAAQ,SAcXC,EAAO,WACNS,EAAIU,WAAWC,aAAcd,EAAMR,EAASW,EAAMA,EAAIY,eAGvD,IAAIC,EAAmB,SAAUrB,GAGhC,IAFA,IAAIsB,EAAejB,EAAGT,KAClB2B,EAAIR,EAAOD,OACRS,KACN,GAAIR,EAAQQ,GAAI3B,OAAS0B,EACxB,OAAOtB,IAGTG,WAAW,WACVkB,EAAkBrB,MAiBpB,OALIK,EAAGC,kBACND,EAAGC,iBAAkB,OAAQF,GAE9BC,EAAGgB,iBAAmBA,EACtBA,EAAkBjB,GACXC,GApET,CAwEGmB,QCxEF,SAAU9B,GAEV,GAAKA,EAAEC,QAAP,CAGA,IAAI8B,EAAK9B,QAAQ+B,cAsBjB,GArBAD,EAAGE,QAAU,WACZ,IACC,OAAOjC,EAAEe,SAASC,cAAe,QAASkB,QAAQC,SAAU,WAC3D,MAAOC,GACR,OAAO,IAKTL,EAAGM,KAAO,WAET,IAAK,IADDC,EAAQtC,EAAEe,SAASG,qBAAsB,QACpCW,EAAI,EAAGA,EAAIS,EAAMlB,OAAQS,IAAK,CACtC,IAAIU,EAAOD,EAAOT,GACD,YAAbU,EAAKhB,KAAmD,UAA9BgB,EAAKC,aAAc,QAChDxC,EAAEC,QAASsC,EAAKrC,KAAMqC,EAAMA,EAAKC,aAAc,UAC/CD,EAAKhB,IAAM,SAMTQ,EAAGE,UAAW,CAClBF,EAAGM,OACH,IAAII,EAAMzC,EAAE0C,YAAaX,EAAGM,KAAM,KAC9BrC,EAAEY,kBACLZ,EAAEY,iBAAkB,OAAQ,WAC3BmB,EAAGM,OACHrC,EAAE2C,cAAeF,KAGfzC,EAAE4C,aACL5C,EAAE4C,YAAa,SAAU,WACxB5C,EAAE2C,cAAeF,OAtCrB,CA0CGX","file":"LoadCssAsync.js","sourcesContent":["/*! loadCSS. [c]2017 Filament Group, Inc. MIT License */\n(function(w){\n\t\"use strict\";\n\t/* exported loadCSS */\n\tvar loadCSS = function( href, before, media ){\n\t\t// Arguments explained:\n\t\t// `href` [REQUIRED] is the URL for your CSS file.\n\t\t// `before` [OPTIONAL] is the element the script should use as a reference for injecting our stylesheet <link> before\n\t\t\t// By default, loadCSS attempts to inject the link after the last stylesheet or script in the DOM. However, you might desire a more specific location in your document.\n\t\t// `media` [OPTIONAL] is the media type or query of the stylesheet. By default it will be 'all'\n\t\tvar doc = w.document;\n\t\tvar ss = doc.createElement( \"link\" );\n\t\tvar ref;\n\t\tif( before ){\n\t\t\tref = before;\n\t\t}\n\t\telse {\n\t\t\tvar refs = ( doc.body || doc.getElementsByTagName( \"head\" )[ 0 ] ).childNodes;\n\t\t\tref = refs[ refs.length - 1];\n\t\t}\n\n\t\tvar sheets = doc.styleSheets;\n\t\tss.rel = \"stylesheet\";\n\t\tss.href = href;\n\t\t// temporarily set media to something inapplicable to ensure it'll fetch without blocking render\n\t\tss.media = \"only x\";\n\n\t\t// wait until body is defined before injecting link. This ensures a non-blocking load in IE11.\n\t\tfunction ready( cb ){\n\t\t\tif( doc.body ){\n\t\t\t\treturn cb();\n\t\t\t}\n\t\t\tsetTimeout(function(){\n\t\t\t\tready( cb );\n\t\t\t});\n\t\t}\n\t\t// Inject link\n\t\t\t// Note: the ternary preserves the existing behavior of \"before\" argument, but we could choose to change the argument to \"after\" in a later release and standardize on ref.nextSibling for all refs\n\t\t\t// Note: `insertBefore` is used instead of `appendChild`, for safety re: http://www.paulirish.com/2011/surefire-dom-element-insertion/\n\t\tready( function(){\n\t\t\tref.parentNode.insertBefore( ss, ( before ? ref : ref.nextSibling ) );\n\t\t});\n\t\t// A method (exposed on return object for external use) that mimics onload by polling document.styleSheets until it includes the new sheet.\n\t\tvar onloadcssdefined = function( cb ){\n\t\t\tvar resolvedHref = ss.href;\n\t\t\tvar i = sheets.length;\n\t\t\twhile( i-- ){\n\t\t\t\tif( sheets[ i ].href === resolvedHref ){\n\t\t\t\t\treturn cb();\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetTimeout(function() {\n\t\t\t\tonloadcssdefined( cb );\n\t\t\t});\n\t\t};\n\n\t\tfunction loadCB(){\n\t\t\tif( ss.addEventListener ){\n\t\t\t\tss.removeEventListener( \"load\", loadCB );\n\t\t\t}\n\t\t\tss.media = media || \"all\";\n\t\t}\n\n\t\t// once loaded, set link's media back to `all` so that the stylesheet applies once it loads\n\t\tif( ss.addEventListener ){\n\t\t\tss.addEventListener( \"load\", loadCB);\n\t\t}\n\t\tss.onloadcssdefined = onloadcssdefined;\n\t\tonloadcssdefined( loadCB );\n\t\treturn ss;\n\t};\n\n\tw.loadCSS = loadCSS;\n}( window ));\n","/*! loadCSS rel=preload polyfill. [c]2017 Filament Group, Inc. MIT License */\n(function( w ){\n\t// rel=preload support test\n\tif( !w.loadCSS ){\n\t\treturn;\n\t}\n\tvar rp = loadCSS.relpreload = {};\n\trp.support = function(){\n\t\ttry {\n\t\t\treturn w.document.createElement( \"link\" ).relList.supports( \"preload\" );\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t// loop preload links and fetch using loadCSS\n\trp.poly = function(){\n\t\tvar links = w.document.getElementsByTagName( \"link\" );\n\t\tfor( var i = 0; i < links.length; i++ ){\n\t\t\tvar link = links[ i ];\n\t\t\tif( link.rel === \"preload\" && link.getAttribute( \"as\" ) === \"style\" ){\n\t\t\t\tw.loadCSS( link.href, link, link.getAttribute( \"media\" ) );\n\t\t\t\tlink.rel = null;\n\t\t\t}\n\t\t}\n\t};\n\n\t// if link[rel=preload] is not supported, we must fetch the CSS manually using loadCSS\n\tif( !rp.support() ){\n\t\trp.poly();\n\t\tvar run = w.setInterval( rp.poly, 300 );\n\t\tif( w.addEventListener ){\n\t\t\tw.addEventListener( \"load\", function(){\n\t\t\t\trp.poly();\n\t\t\t\tw.clearInterval( run );\n\t\t\t} );\n\t\t}\n\t\tif( w.attachEvent ){\n\t\t\tw.attachEvent( \"onload\", function(){\n\t\t\t\tw.clearInterval( run );\n\t\t\t} );\n\t\t}\n\t}\n}( window ));\n"]}